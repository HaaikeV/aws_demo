---
# tasks file for roles/ec2_security_group
- name: find vpc id for sg object "{{ aws_security_group_name }}"
  ec2_vpc_net_info:
    region: "{{ aws_region }}"
    filters:
      "tag:environment": "{{ aws_environment_identifier }}"
  register: vpc_net_info_output

- set_fact:
    vpc_id_fact: "{{ vpc_net_info_output.vpcs[0].id }}"

- name: creating security group "{{ aws_security_group_name }}" in "{{ aws_environment_identifier }}" and attaching "{{ vpc_id_fact }}"
  ec2_group:
    state: present
    name: "{{ aws_security_group_name }}"
    description: Inbound WinRM and RDP
    vpc_id: "{{ vpc_id_fact }}"
    region: "{{ aws_region }}"
    tags:
      name: "{{ aws_security_group_name }}"
      admin_name: "{{ aws_ansible_iam_role }}"
      environment: "{{ aws_environment_identifier }}"
    rules:
    - proto: tcp
      from_port: 80
      to_port: 80
      cidr_ip: 0.0.0.0/0
    - proto: tcp
      from_port: 5986
      to_port: 5986
      cidr_ip: 0.0.0.0/0
    - proto: tcp
      from_port: 3389
      to_port: 3389
      cidr_ip: 0.0.0.0/0
  register: sg_output

- name: find security group id for ec2 instance "{{ aws_instance_type }}"
  ec2_group_info:
    region: "{{ aws_region }}"
    filters:
      vpc-id: "{{ vpc_id_fact }}"
      "tag:environment": "{{ aws_environment_identifier }}"
  register: ec2_group_info_output

- set_fact:  
    security_group_id_fact: "{{ ec2_group_info_output.security_groups[0].group_id }}"

- debug: var=ec2_group_info_output.security_groups[0].group_id
