---
# tasks file for roles/ec2_windows_ami-0f25b344af3f73199
- name: find vpc id for sg object "{{ aws_security_group_name }}"
  ec2_vpc_net_info:
    region: "{{ aws_region }}"
    filters:
      "tag:environment": "{{ aws_environment_identifier }}"
  register: vpc_net_info_output

- set_fact:
    vpc_id_fact: "{{ vpc_net_info_output.vpcs[0].id }}"

- name: find security group id for ec2 instance "{{ aws_instance_type }}"
  ec2_group_info:
    region: "{{ aws_region }}"
    filters:
      vpc-id: "{{ vpc_id_fact }}"
      "tag:environment": "{{ aws_environment_identifier }}"
  register: ec2_group_info_output

- set_fact:  
    security_group_id_fact: "{{ ec2_group_info_output.security_groups[0].group_id }}"

- name: create a new ec2 key pair, returns generated private key
  ec2_key:
    name: "{{ aws_ec2_key_name }}"
  register: ec2_key_output      

- name: create microsoft ec2
  ec2_instance:
    region: "{{ aws_region }}"
    key_name: "{{ aws_ec2_key_name }}"
    vpc_subnet_id: "{{ vpc_id_fact }}"
    instance_type: "{{ aws_instance_type }}"
    security_group: "{{ security_group_id_fact }}"
    network:
      assign_public_ip: true
    image_id: "{{ aws_ami_image_id }}"
    user_data:  "{{ lookup('file', '{{ user_data }}') }}"
    instance_role: "{{ aws_ansible_iam_role }}"
    tags:
      operating_system: "{{ aws_os_type }}"
      environment: "{{ aws_environment_identifier }}"
      owner: "{{ aws_ansible_iam_role }}"
      group: "{{ security_group_id_fact }}"